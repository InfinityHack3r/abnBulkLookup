name: Build and Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.11.5

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt

    - name: Build executable
      run: |
        pyinstaller --onefile --noconsole abnBulkLookup.py --hidden-import requests --hidden-import pandas --hidden-import openpyxl --hidden-import dotenv --hidden-import xlsxwriter

    - name: Archive build (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        Compress-Archive -Path dist\abnBulkLookup.exe -DestinationPath abnBulkLookup-windows.zip
      shell: powershell

    - name: Archive build (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        zip -j abnBulkLookup-linux.zip dist/abnBulkLookup

    - name: Archive build (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        zip -j abnBulkLookup-macos.zip dist/abnBulkLookup

    - name: Upload build artifact
      uses: actions/upload-artifact@v2
      with:
        name: abnBulkLookup-${{ matrix.os }}
        path: |
          abnBulkLookup-*.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download artifacts (Linux)
      uses: actions/download-artifact@v2
      with:
        name: abnBulkLookup-ubuntu-latest
        path: ./dist/linux

    - name: Download artifacts (macOS)
      uses: actions/download-artifact@v2
      with:
        name: abnBulkLookup-macos-latest
        path: ./dist/macos

    - name: Download artifacts (Windows)
      uses: actions/download-artifact@v2
      with:
        name: abnBulkLookup-windows-latest
        path: ./dist/windows

    - name: Get current release version
      id: get_version
      run: |
        echo ::set-output name=version::v$(date +'%Y%m%d%H%M%S')

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.run_number }}
        release_name: Release ${{ github.run_number }}
        draft: false
        prerelease: false

    - name: Upload Release Asset (Linux)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/linux/abnBulkLookup-linux.zip
        asset_name: abnBulkLookup-linux.zip
        asset_content_type: application/zip

    - name: Upload Release Asset (macOS)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/macos/abnBulkLookup-macos.zip
        asset_name: abnBulkLookup-macos.zip
        asset_content_type: application/zip

    - name: Upload Release Asset (Windows)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/windows/abnBulkLookup-windows.zip
        asset_name: abnBulkLookup-windows.zip
        asset_content_type: application/zip
